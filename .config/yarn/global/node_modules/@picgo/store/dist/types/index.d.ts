export declare enum IDBStatus {
    inited = "inited",
    loaded = "loaded",
    started = "started",
    stopped = "stopped"
}
export interface IFilter {
    orderBy?: 'asc' | 'desc';
    limit?: number;
    offset?: number;
}
export interface IGetResult<T> {
    total: number;
    data: Array<IResult<T>>;
}
export interface IObject {
    id?: string;
    [propName: string]: any;
}
export declare type IInsertData = IObject[] | [string, IObject] | [IObject[]];
export declare enum IMetaInfoMode {
    createMany = 0,
    create = 1,
    update = 2,
    updateMany = 3
}
export declare type IResult<T> = T & {
    id: string;
    createdAt: number;
    updatedAt: number;
};
export interface ILowData {
    [propName: string]: IObject[] | ILowDataKeyMap;
}
export interface ILowDataKeyMap {
    [id: string]: 1;
}
export interface IJSON {
    [propsName: string]: string | number | IJSON;
}
