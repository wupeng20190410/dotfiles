"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.I18n = void 0;
const utils_1 = require("./utils");
const DOTNOTATION = '.';
class I18n {
    constructor(options) {
        const { adapter, defaultLanguage } = options;
        this.adapter = adapter;
        this.currentLanguage = defaultLanguage.trim();
        this.defaultLanguage = this.currentLanguage;
    }
    getAdapter() {
        return this.adapter;
    }
    getLanguage() {
        return this.currentLanguage;
    }
    setLanguage(language) {
        this.currentLanguage = language.trim();
    }
    setDefaultLanguage(language) {
        this.defaultLanguage = language.trim();
    }
    getLocale() {
        let currentLocale = this.adapter.getLocale(this.currentLanguage);
        if (!currentLocale) {
            currentLocale = this.adapter.getLocale(this.defaultLanguage);
            if (!currentLocale) {
                utils_1.logger.error(`current locale ${this.currentLanguage} is null`);
                return null;
            }
            utils_1.logger.error(`current locale ${this.currentLanguage} is null, change to default locale ${this.defaultLanguage}`);
        }
        return currentLocale;
    }
    translate(phrase, args) {
        const currentLocale = this.getLocale();
        if (!currentLocale) {
            return;
        }
        const template = phrase.split(DOTNOTATION).reduce((object, key) => {
            if (!object || !object.hasOwnProperty(key)) {
                utils_1.logger.warn(`current locale doesn't contain ${phrase}`);
                return undefined;
            }
            return object[key];
        }, currentLocale);
        return this.postProcess(template, args);
    }
    postProcess(template, args) {
        if (!template) {
            return;
        }
        if (!args) {
            return template;
        }
        // see benchmark
        return Object.keys(args).reduce((res, key) => {
            return res.replace('${' + key + '}', args[key]);
        }, template);
    }
}
exports.I18n = I18n;
